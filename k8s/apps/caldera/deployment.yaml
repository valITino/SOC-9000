apiVersion: apps/v1
kind: Deployment
metadata:
  name: caldera
  namespace: soc
spec:
  replicas: 1
  selector: { matchLabels: { app: caldera } }
  template:
    metadata: { labels: { app: caldera } }
    spec:
      containers:
        - name: caldera
          image: mitre/caldera:latest
          imagePullPolicy: IfNotPresent
          ports: [{containerPort: 8888}]
          env:
            - { name: CALDERA_ADMIN, value: "admin" }
            - { name: CALDERA_PASSWORD, value: "admin" }  # lab-only
          readinessProbe:
            httpGet: { path: /, port: 8888 }
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /, port: 8888 }
            initialDelaySeconds: 60
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: caldera
  namespace: soc
spec:
  type: ClusterIP
  selector: { app: caldera }
  ports:
    - { name: http, port: 8888, targetPort: 8888 }
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: caldera
  namespace: soc
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: caldera.lab.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service: { name: caldera, port: { number: 8888 } }
