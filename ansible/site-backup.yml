---
- name: SOC-9000 snapshot on ContainerHost
  hosts: containerhost
  become: true
  vars:
    out_dir: "/tmp/soc-9000-backup-{{ ansible_date_time.date }}-{{ ansible_date_time.time | regex_replace(':','') }}"
  tasks:
    - name: Create temp backup dir
      ansible.builtin.file:
        path: "{{ out_dir }}"
        state: directory
        mode: '0755'

    - name: Save cluster info (without secret data)
      ansible.builtin.shell: |
        set -euo pipefail
        kubectl version --output=yaml > {{ out_dir }}/cluster-version.yaml
        kubectl get ns -o yaml > {{ out_dir }}/namespaces.yaml
        kubectl get all,ingress,svc,cm,pvc,pv,deploy,ds,sts,job,cronjob -A -o yaml > {{ out_dir }}/resources.yaml
        kubectl get secret -A -o json \
          | jq '{items:[.items[]|{ns:.metadata.namespace,name:.metadata.name,type:.type}]}' \
          > {{ out_dir }}/secrets-list.json
      args:
        executable: /bin/bash
      changed_when: false

    - name: Archive PV data (local-path + optional NFS)
      ansible.builtin.shell: |
        set -euo pipefail
        cd /
        tar -czf {{ out_dir }}/cluster-storage.tgz \
          var/lib/rancher/k3s/storage \
          srv/nfs 2>/dev/null || true
      args:
        executable: /bin/bash
      changed_when: false

    - name: Fetch snapshot to Windows backup folder
      vars:
        dest_root: "/mnt/e/SOC-9000/backups"
      ansible.builtin.fetch:
        src: "{{ item }}"
        dest: "{{ dest_root }}/"
        flat: false
      with_items:
        - "{{ out_dir }}/cluster-version.yaml"
        - "{{ out_dir }}/namespaces.yaml"
        - "{{ out_dir }}/resources.yaml"
        - "{{ out_dir }}/secrets-list.json"
        - "{{ out_dir }}/cluster-storage.tgz"
